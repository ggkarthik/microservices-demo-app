name: Security Scanning

on:
  schedule:
    - cron: '0 0 * * 0'  # Run weekly on Sunday at midnight
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  OWNER: ${{ github.repository_owner }}

jobs:
  secret-scanning:
    name: Secret Scanning
    runs-on: ubuntu-latest
    permissions:
      security-events: write
      actions: read
      contents: read
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # GitHub Advanced Security secret scanning is enabled at the repository level
      - name: Check for secrets with GitHub Advanced Security
        run: |
          echo "GitHub Advanced Security secret scanning is enabled for this repository"
          echo "Any detected secrets will be reported in the Security tab"

      # Additional secret scanning with TruffleHog for enhanced coverage
      - name: TruffleHog OSS
        uses: trufflesecurity/trufflehog@v3.90.6
        with:
          path: ./
          base: ${{ github.event.repository.default_branch }}
          head: HEAD
          extra_args: --debug --only-verified

  dependency-review:
    name: Dependency Review
    runs-on: ubuntu-latest
    permissions:
      contents: read
      actions: read
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Dependency Review
        uses: actions/dependency-review-action@v3
        with:
          fail-on-severity: critical

  trivy-fs-scan:
    name: Trivy File System Scan
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write
      actions: read
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run Trivy vulnerability scanner in fs mode
        uses: aquasecurity/trivy-action@0.33.1
        with:
          scan-type: 'fs'
          scan-ref: '.'
          format: 'sarif'
          output: 'trivy-results-fs.sarif'
          severity: 'CRITICAL,HIGH'

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: 'trivy-results-fs.sarif'
          category: 'trivy-fs'
          
  trivy-config-scan:
    name: Trivy IaC and Config Scan
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write
      actions: read
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Run Trivy IaC scan for Kubernetes manifests
        uses: aquasecurity/trivy-action@0.33.1
        with:
          scan-type: 'config'
          scan-ref: './kubernetes-manifests'
          format: 'sarif'
          output: 'trivy-k8s-results.sarif'
          severity: 'CRITICAL,HIGH'
          
      - name: Run Trivy IaC scan for Terraform
        uses: aquasecurity/trivy-action@0.33.1
        with:
          scan-type: 'config'
          scan-ref: './terraform'
          format: 'sarif'
          output: 'trivy-terraform-results.sarif'
          severity: 'CRITICAL,HIGH'
          
      - name: Run Trivy IaC scan for Dockerfiles
        uses: aquasecurity/trivy-action@0.33.1
        with:
          scan-type: 'config'
          scan-ref: './src'
          format: 'sarif'
          output: 'trivy-dockerfile-results.sarif'
          severity: 'CRITICAL,HIGH'
          
      - name: Upload Trivy K8s scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: 'trivy-k8s-results.sarif'
          category: 'trivy-k8s-security'
          
      - name: Upload Trivy Terraform scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: 'trivy-terraform-results.sarif'
          category: 'trivy-terraform-security'
          
      - name: Upload Trivy Dockerfile scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: 'trivy-dockerfile-results.sarif'
          category: 'trivy-dockerfile-security'

  codeql-extended:
    name: CodeQL Extended Analysis
    runs-on: ubuntu-latest
    permissions:
      security-events: write
      actions: read
      contents: read
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: go, javascript, python
          # Excluding Java and C# from CodeQL analysis due to processing issues
          # languages: go, javascript, python, java, csharp
          queries: security-extended,security-and-quality

      # Replace autobuild with manual build steps for each language
      - name: Build Go code
        run: |
          cd src/frontend && go build -v ./...
          cd ../../src/productcatalogservice && go build -v ./...
          cd ../../src/checkoutservice && go build -v ./...
          cd ../../src/shippingservice && go build -v ./...
        continue-on-error: true

      # Commenting out Java build since we're excluding Java from CodeQL analysis
      # - name: Build Java code
      #   run: |
      #     cd src/adservice
      #     chmod +x ./gradlew
      #     ./gradlew build -x test
      #   continue-on-error: true

      # Commenting out C# build since we're excluding C# from CodeQL analysis
      # - name: Build C# code
      #   run: |
      #     cd src/cartservice/src
      #     dotnet build
      #   continue-on-error: true

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3
        with:
          category: 'codeql-extended'

  software-bill-of-materials:
    name: Generate SBOM
    runs-on: ubuntu-latest
    permissions:
      contents: read
      actions: read
    strategy:
      matrix:
        service: [
          frontend, 
          cartservice, 
          productcatalogservice, 
          currencyservice, 
          paymentservice, 
          shippingservice, 
          emailservice, 
          checkoutservice, 
          recommendationservice, 
          adservice,
          shoppingassistantservice,
          loadgenerator
        ]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        
      # Special handling for cartservice
      - name: Build cartservice image
        if: matrix.service == 'cartservice'
        uses: docker/build-push-action@v4
        with:
          context: ./src/cartservice
          file: ./src/cartservice/src/Dockerfile
          push: false
          load: true
          tags: ${{ env.REGISTRY }}/${{ env.OWNER }}/microservices-demo-${{ matrix.service }}:sbom-scan
          cache-from: type=gha
          cache-to: type=gha,mode=max

      # Build all other services
      - name: Build other service images
        if: matrix.service != 'cartservice'
        uses: docker/build-push-action@v4
        with:
          context: ./src/${{ matrix.service }}
          push: false
          load: true
          tags: ${{ env.REGISTRY }}/${{ env.OWNER }}/microservices-demo-${{ matrix.service }}:sbom-scan
          cache-from: type=gha
          cache-to: type=gha,mode=max

      # Run Trivy vulnerability scanner for cartservice
      - name: Run Trivy vulnerability scanner for cartservice
        if: matrix.service == 'cartservice'
        uses: aquasecurity/trivy-action@0.33.1
        continue-on-error: true
        with:
          image-ref: ${{ env.REGISTRY }}/${{ env.OWNER }}/microservices-demo-${{ matrix.service }}:sbom-scan
          format: 'sarif'
          output: 'trivy-results-${{ matrix.service }}.sarif'
          severity: 'CRITICAL,HIGH'
          
      # Run Trivy vulnerability scanner for other services
      - name: Run Trivy vulnerability scanner for other services
        if: matrix.service != 'cartservice'
        uses: aquasecurity/trivy-action@0.33.1
        continue-on-error: true
        with:
          image-ref: ${{ env.REGISTRY }}/${{ env.OWNER }}/microservices-demo-${{ matrix.service }}:sbom-scan
          format: 'sarif'
          output: 'trivy-results-${{ matrix.service }}.sarif'
          severity: 'CRITICAL,HIGH'
          
      # Create empty SARIF file if Trivy fails
      - name: Create empty SARIF file if needed
        run: |
          if [ ! -f "trivy-results-${{ matrix.service }}.sarif" ]; then
            echo '{"version":"2.1.0","runs":[{"tool":{"driver":{"name":"Trivy","informationUri":"https://github.com/aquasecurity/trivy","rules":[]}},"results":[]}]}' > trivy-results-${{ matrix.service }}.sarif
            echo "Created empty SARIF file for ${{ matrix.service }}"
          fi

      - name: Generate SBOM with Syft
        uses: anchore/sbom-action@v0.20.5
        continue-on-error: true
        with:
          image: ${{ env.REGISTRY }}/${{ env.OWNER }}/microservices-demo-${{ matrix.service }}:sbom-scan
          format: spdx-json
          output-file: sbom-${{ matrix.service }}.spdx.json

      # Create empty SBOM file if Syft fails
      - name: Create empty SBOM file if needed
        run: |
          if [ ! -f "sbom-${{ matrix.service }}.spdx.json" ]; then
            echo '{"spdxVersion":"SPDX-2.2","dataLicense":"CC0-1.0","name":"sbom-${{ matrix.service }}","documentNamespace":"https://example.com/spdx","packages":[]}' > sbom-${{ matrix.service }}.spdx.json
            echo "Created empty SBOM file for ${{ matrix.service }}"
          fi

      - name: Upload SBOM
        uses: actions/upload-artifact@v4
        with:
          name: sbom-${{ matrix.service }}
          path: sbom-${{ matrix.service }}.spdx.json
          
  consolidated-sbom:
    name: Consolidate SBOMs
    runs-on: ubuntu-latest
    needs: software-bill-of-materials
    permissions:
      contents: read
      actions: read
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Download all SBOMs
        uses: actions/download-artifact@v4
        with:
          path: ./sboms
          
      - name: Consolidate SBOMs
        run: |
          mkdir -p consolidated-sbom
          cp -r sboms/*/*.json consolidated-sbom/
          echo "Created consolidated SBOM directory with all service SBOMs"
          
      - name: Upload consolidated SBOM
        uses: actions/upload-artifact@v4
        with:
          name: consolidated-sbom
          path: consolidated-sbom/